// <auto-generated />
using System;
using Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(dbTestDriveContext))]
    [Migration("20230304020046_CriarBancodeDados")]
    partial class CriarBancodeDados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Api.Models.TbAvaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_avaliacao");

                    b.Property<decimal>("VlFeedback")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("vl_feedback");

                    b.HasKey("IdAvaliacao")
                        .HasName("PRIMARY");

                    b.ToTable("tb_avaliacao", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbCambio", b =>
                {
                    b.Property<int>("IdCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cambio");

                    b.Property<string>("DsCambio")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ds_cambio");

                    b.HasKey("IdCambio")
                        .HasName("PRIMARY");

                    b.ToTable("tb_cambio", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbCarro", b =>
                {
                    b.Property<int>("IdCarro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_carro");

                    b.Property<string>("DsPotencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_potencia");

                    b.Property<DateTime>("DtAnoFabricacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_ano_fabricacao");

                    b.Property<DateTime>("DtAnoModelo")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_ano_modelo");

                    b.Property<int?>("IdCambio")
                        .HasColumnType("int")
                        .HasColumnName("id_cambio");

                    b.Property<int?>("IdCombustivel")
                        .HasColumnType("int")
                        .HasColumnName("id_combustivel");

                    b.Property<int?>("IdFabricante")
                        .HasColumnType("int")
                        .HasColumnName("id_fabricante");

                    b.Property<int>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<string>("NmCarro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nm_carro");

                    b.Property<decimal>("VlPreco")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("vl_preco");

                    b.HasKey("IdCarro")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCambio" }, "id_cambio");

                    b.HasIndex(new[] { "IdCombustivel" }, "id_combustivel");

                    b.HasIndex(new[] { "IdFabricante" }, "id_fabricante");

                    b.HasIndex(new[] { "IdModelo" }, "id_modelo");

                    b.ToTable("tb_carros", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<string>("DsEndereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_endereco");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("NmCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nm_cliente");

                    b.Property<string>("NrCelular")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nr_celular");

                    b.Property<string>("NrCnh")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nr_cnh");

                    b.Property<string>("NrCpf")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nr_cpf");

                    b.Property<string>("NrRg")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nr_rg");

                    b.Property<string>("NrTelefone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nr_telefone");

                    b.HasKey("IdCliente")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario");

                    b.ToTable("tb_clientes", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbCombustivel", b =>
                {
                    b.Property<int>("IdCombustivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_combustivel");

                    b.Property<string>("DsCombustivel")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_combustivel");

                    b.HasKey("IdCombustivel")
                        .HasName("PRIMARY");

                    b.ToTable("tb_combustivel", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbFabricante", b =>
                {
                    b.Property<int>("IdFabricante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_fabricante");

                    b.Property<string>("DsFabricante")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_fabricante");

                    b.HasKey("IdFabricante")
                        .HasName("PRIMARY");

                    b.ToTable("tb_fabricante", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbFeedback", b =>
                {
                    b.Property<int>("IdFeedback")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_feedback");

                    b.Property<string>("DsFeedback")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ds_feedback");

                    b.Property<DateTime>("DtFeedback")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_feedback");

                    b.Property<DateTime>("DtUltimaAlteracao")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_ultima_alteracao");

                    b.Property<int?>("IdAvaliacao")
                        .HasColumnType("int")
                        .HasColumnName("id_avaliacao");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdFeedback")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdAvaliacao" }, "id_avaliacao");

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario")
                        .HasDatabaseName("id_usuario1");

                    b.ToTable("tb_feedback", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbModelo", b =>
                {
                    b.Property<int>("IdModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_modelo");

                    b.Property<string>("DsModelo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_modelo");

                    b.HasKey("IdModelo")
                        .HasName("PRIMARY");

                    b.ToTable("tb_modelo", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbNivelAcesso", b =>
                {
                    b.Property<int>("IdNivelAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_nivel_acesso");

                    b.Property<string>("DsNivel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_nivel");

                    b.HasKey("IdNivelAcesso")
                        .HasName("PRIMARY");

                    b.ToTable("tb_nivel_acesso", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbTestDrive", b =>
                {
                    b.Property<int>("IdTestDrive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_test_drive");

                    b.Property<bool>("BlDesmarcado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bl_desmarcado");

                    b.Property<bool>("BlRealizado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bl_realizado");

                    b.Property<DateTime>("DtTestDrive")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_test_drive");

                    b.Property<int>("IdCarro")
                        .HasColumnType("int")
                        .HasColumnName("id_carro");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.HasKey("IdTestDrive")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCarro" }, "id_carro");

                    b.HasIndex(new[] { "IdCliente" }, "id_cliente");

                    b.ToTable("tb_test_drive", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbUsuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("DsEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_email");

                    b.Property<string>("DsSenha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ds_senha");

                    b.Property<DateTime>("DtContaAtualizada")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_conta_atualizada");

                    b.Property<DateTime>("DtContaCriada")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_conta_criada");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_nascimento");

                    b.Property<DateTime>("DtUltimoLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_ultimo_login");

                    b.Property<int>("IdNivelAcesso")
                        .HasColumnType("int")
                        .HasColumnName("id_nivel_acesso");

                    b.Property<string>("NmUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nm_usuario");

                    b.HasKey("IdUsuario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdNivelAcesso" }, "id_nivel_acesso");

                    b.ToTable("tb_usuario", (string)null);
                });

            modelBuilder.Entity("Api.Models.TbCarro", b =>
                {
                    b.HasOne("Api.Models.TbCambio", "IdCambioNavigation")
                        .WithMany("TbCarros")
                        .HasForeignKey("IdCambio")
                        .HasConstraintName("tb_carros_ibfk_3");

                    b.HasOne("Api.Models.TbCombustivel", "IdCombustivelNavigation")
                        .WithMany("TbCarros")
                        .HasForeignKey("IdCombustivel")
                        .HasConstraintName("tb_carros_ibfk_4");

                    b.HasOne("Api.Models.TbFabricante", "IdFabricanteNavigation")
                        .WithMany("TbCarros")
                        .HasForeignKey("IdFabricante")
                        .HasConstraintName("tb_carros_ibfk_2");

                    b.HasOne("Api.Models.TbModelo", "IdModeloNavigation")
                        .WithMany("TbCarros")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tb_carros_ibfk_1");

                    b.Navigation("IdCambioNavigation");

                    b.Navigation("IdCombustivelNavigation");

                    b.Navigation("IdFabricanteNavigation");

                    b.Navigation("IdModeloNavigation");
                });

            modelBuilder.Entity("Api.Models.TbCliente", b =>
                {
                    b.HasOne("Api.Models.TbUsuario", "IdUsuarioNavigation")
                        .WithMany("TbClientes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tb_clientes_ibfk_1");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Api.Models.TbFeedback", b =>
                {
                    b.HasOne("Api.Models.TbAvaliacao", "IdAvaliacaoNavigation")
                        .WithMany("TbFeedbacks")
                        .HasForeignKey("IdAvaliacao")
                        .HasConstraintName("tb_feedback_ibfk_1");

                    b.HasOne("Api.Models.TbUsuario", "IdUsuarioNavigation")
                        .WithMany("TbFeedbacks")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("tb_feedback_ibfk_2");

                    b.Navigation("IdAvaliacaoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Api.Models.TbTestDrive", b =>
                {
                    b.HasOne("Api.Models.TbCarro", "IdCarroNavigation")
                        .WithMany("TbTestDrives")
                        .HasForeignKey("IdCarro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tb_test_drive_ibfk_2");

                    b.HasOne("Api.Models.TbCliente", "IdClienteNavigation")
                        .WithMany("TbTestDrives")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("tb_test_drive_ibfk_1");

                    b.Navigation("IdCarroNavigation");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("Api.Models.TbUsuario", b =>
                {
                    b.HasOne("Api.Models.TbNivelAcesso", "IdNivelAcessoNavigation")
                        .WithMany("TbUsuarios")
                        .HasForeignKey("IdNivelAcesso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tb_usuario_ibfk_1");

                    b.Navigation("IdNivelAcessoNavigation");
                });

            modelBuilder.Entity("Api.Models.TbAvaliacao", b =>
                {
                    b.Navigation("TbFeedbacks");
                });

            modelBuilder.Entity("Api.Models.TbCambio", b =>
                {
                    b.Navigation("TbCarros");
                });

            modelBuilder.Entity("Api.Models.TbCarro", b =>
                {
                    b.Navigation("TbTestDrives");
                });

            modelBuilder.Entity("Api.Models.TbCliente", b =>
                {
                    b.Navigation("TbTestDrives");
                });

            modelBuilder.Entity("Api.Models.TbCombustivel", b =>
                {
                    b.Navigation("TbCarros");
                });

            modelBuilder.Entity("Api.Models.TbFabricante", b =>
                {
                    b.Navigation("TbCarros");
                });

            modelBuilder.Entity("Api.Models.TbModelo", b =>
                {
                    b.Navigation("TbCarros");
                });

            modelBuilder.Entity("Api.Models.TbNivelAcesso", b =>
                {
                    b.Navigation("TbUsuarios");
                });

            modelBuilder.Entity("Api.Models.TbUsuario", b =>
                {
                    b.Navigation("TbClientes");

                    b.Navigation("TbFeedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
